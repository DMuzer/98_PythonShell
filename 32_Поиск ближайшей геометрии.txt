
from Autodesk.Revit import *
from Autodesk.Revit.DB import *
from contextlib import contextmanager
import math, sys



lib_path = r"D:\18_проектирование\98_PythonShell"
if not lib_path in sys.path :
	sys.path.append(lib_path)


pi2 = math.pi * 2

dut = 0.0032808398950131233

@contextmanager
def trans(doc, a='транзакция') :
	tr = Transaction(doc)
	tr.Start(a)
	try :		
		yield tr
	finally :
		tr.Commit()
	
bic = BuiltInCategory
bip = DB.Structure.StructuralType
nonstr = bip.NonStructural

uidoc = __revit__.ActiveUIDocument
doc = uidoc.Document


def show_var_(v) :
	flds = dir(v)
	print("Доступные поля")
	for f in flds :
		if not f.startswith("__") :
			try :
				print("{:15} : {}".format(f, getattr(v, f)))
			except Exception as ex:
				pass
				

import dm_connect_2 as dm
import dm_nearest_geometry as dm1
reload(dm)	
reload(dm1)
ng = dm1.dm_Nearest_Geometry([bic.OST_Floors, bic.OST_Roofs])

#elems = dm1.get_elements_from_doc(ng.linked_docs[0], bic.OST_Floors)
#lelem = dm1.get_element_geometry_from_doc(ng.linked_docs[0], bic.OST_Floors)

#hangs = uidoc.Selection.GetElementIds()

def set_hangers_distance(hangs)

	with trans(doc):
		for hang in hangs :
			#hang = doc.GetElement(h_id)
			p1 = hang.Location.Point
			p2 = ng.nearest(p1)
			d = p1.DistanceTo(p2)
	
			hang.LookupParameter("Расстояние_до_перекрытия").Set(d)
	


 
	

