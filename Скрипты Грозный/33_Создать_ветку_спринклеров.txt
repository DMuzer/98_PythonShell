"""
***************************************************************************
** СОЗДАНИЕ ВЕТКИ СПРИНКЛЕРОВ И ПОДКЛЮЧЕНИЕ К УКАЗАННОЙ ТРУБЕ *************
***************************************************************************
"""

"""
Выполнение подключения спринклерной ветки к питающему трубопроводу
для проекта Автостоянка Грозный
Для функционирования выбрать несколько спринклеров которые будут веткой
далее выбрать трубопровод к которому подключить ветку
Перпендикулял от наиболее удаленного спринклера на трубу должен падать в пределы трубы, иначе
функция будет работать некорректно и результаты будут непредсказуемые.
"""
from Autodesk.Revit import *
from Autodesk.Revit.DB import *
from contextlib import contextmanager
import math, sys



lib_path = r"D:\18_проектирование\98_PythonShell"
if not lib_path in sys.path :
	sys.path.append(lib_path)


pi2 = math.pi * 2

dut = 0.0032808398950131233

@contextmanager
def trans(doc, a='транзакция') :
	tr = Transaction(doc)
	tr.Start(a)
	try :		
		yield tr
	finally :
		tr.Commit()
	
bic = BuiltInCategory
bip = DB.Structure.StructuralType
nonstr = bip.NonStructural

uidoc = __revit__.ActiveUIDocument
doc = uidoc.Document


def show_var_(v) :
	flds = dir(v)
	print("Доступные поля")
	for f in flds :
		if not f.startswith("__") :
			try :
				print("{:15} : {}".format(f, getattr(v, f)))
			except Exception as ex:
				pass
				

import dm_connect_2 as dm
import dm_nearest_geometry as dm1
reload(dm)	
reload(dm1)

def create_line() :
	import System
	sprs = uidoc.Selection.GetElementIds()
	
	print("Количество элементов в списке {}".format(len(sprs)))
	
	if len(sprs) == 0 :
		sprs = uidoc.Selection.PickObjects(UI.Selection.ObjectType.Element)
		sprs = [e.ElementId for e in sprs]
		
	sprs = System.Array[ElementId](sprs)
	print("Количество элементов в списке {}".format(len(sprs)))
		
	sprs = FilteredElementCollector(doc, sprs).OfCategory(bic.OST_Sprinklers).ToElements()
		
	print("Количество элементов в списке {}".format(len(sprs)))
	
	pipe_id = uidoc.Selection.PickObject(UI.Selection.ObjectType.Element).ElementId
	pipe = doc.GetElement(pipe_id)
	
	if type(pipe) != Plumbing.Pipe :
		print("Выбрана не труба", pipe)
		return
	else :
		print("О! Труба!")
		
	sprs_sorted = sorted(sprs, key = lambda x : pipe.Location.Curve.Distance(x.Location.Point))
	
	s0 = sprs_sorted[-1]
	
	global p2c
	
	p2c = dm1.dm_pipe_2_connect(pipe)
	
	p2c.connect_equipment(s0, next_size = 0, 
								try_to_center = False,
								additional_gap = 40 *dut
								)
	
	for spr_num, s in enumerate(sprs_sorted[:-1],1) :
		print(50*"*")
		print("Подключение cпринклера {} ".format(spr_num))
		nearest_p = p2c.nearest_new_pipe(s)	
		nearest_p.connect_equipment(s, next_size=0, second_size = 0, cap=False)
			
			
try :
	while True :
		try :
			p2c = None	
			create_line()
		except :
			break
except :
	pass
#__window__.Close()
	
	






	


