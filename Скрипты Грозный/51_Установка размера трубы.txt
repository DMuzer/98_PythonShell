"""
**************************************************
* Установка размеров для трубы
****************************************************

Вставка размера для трубы на 3Д виде
"""

import Autodesk.Revit.DB as DB
import Autodesk.Revit.UI as UI
from Autodesk.Revit.DB import *
from contextlib import contextmanager
import math, sys
import clr
import System

clr.AddReferenceToFileAndPath(r"C:\Users\Дмитрий\NetTopologySuite.2.4.0\lib\netstandard2.0\NetTopologySuite.dll")
clr.AddReferenceToFileAndPath(r"C:\Program Files\Autodesk\Revit 2021\RevitAPIIFC.dll")
import NetTopologySuite as nts
import NetTopologySuite.Geometries as nts_geom
from Autodesk.Revit.DB import IFC as ifc

lib_path = r"D:\18_проектирование\98_PythonShell"
if not lib_path in sys.path :
	sys.path.append(lib_path)
	
import dm_connect_2 as dm
import dm_nearest_geometry as dm1

reload(dm)	
reload(dm1)

pi2 = math.pi * 2

dut = 0.0032808398950131233
	
bic = BuiltInCategory
bip = DB.Structure.StructuralType
nonstr = bip.NonStructural
sel_els = UI.Selection.ObjectType.Element

uidoc = __revit__.ActiveUIDocument
doc = uidoc.Document

#app = dm.dmApp(doc)

"""
*************************************************************
* Окончание секции инициализации
*************************************************************
"""

def create_dimension(pipe) :
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.DetailLevel = ViewDetailLevel.Coarse
	opt.View = uidoc.ActiveView
	
	gs = pipe.Geometry[opt]
	
	for g in gs :
		if type(g) == Line :
			line = g
		#print(g)
		
	r1 = line.GetEndPointReference(0)
	r2 = line.GetEndPointReference(1)
	
	p1 = line.GetEndPoint(0)
	p2 = line.GetEndPoint(1)
	
	
	av = uidoc.ActiveView
	rd = av.RightDirection
	td = av.UpDirection
	line2 = line.CreateOffset(1, -td)
	line2 = line.Clone()
	
	ref_arr = ReferenceArray()
	ref_arr.Append(r1)
	ref_arr.Append(r2)
	
	conn = list(pipe.ConnectorManager.Connectors)[0]
	p3 = p2 + conn.CoordinateSystem.BasisX
	pl1 = Plane.CreateByThreePoints(p1, p2, p3)

	with dm.trans(doc) :
		#ds = DirectShape.CreateElement(doc, ElementId(bic.OST_GenericModel))
		#ds.SetShape(System.Array[GeometryObject](list(gs)))
		skp = SketchPlane.Create(doc, pl1)
		av.SketchPlane = skp
		dim = doc.Create.NewDimension(av, line2, ref_arr)

try :
	while True :
		pipe_ref = uidoc.Selection.PickObject(sel_els)
		pipe = doc.GetElement(pipe_ref) 
		
		create_dimension(pipe)
except Exception as ex:
	print(ex)
	pass