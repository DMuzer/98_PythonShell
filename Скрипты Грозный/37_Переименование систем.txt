from Autodesk.Revit import *
from Autodesk.Revit.DB import *
from contextlib import contextmanager
import math, sys



lib_path = r"D:\18_проектирование\98_PythonShell"
if not lib_path in sys.path :
	sys.path.append(lib_path)


pi2 = math.pi * 2

dut = 0.0032808398950131233

@contextmanager
def trans(doc, a='транзакция') :
	tr = Transaction(doc)
	tr.Start(a)
	try :		
		yield tr
	finally :
		tr.Commit()
	
bic = BuiltInCategory
bip = DB.Structure.StructuralType
nonstr = bip.NonStructural

uidoc = __revit__.ActiveUIDocument
doc = uidoc.Document


def show_var_(v) :
	flds = dir(v)
	print("Доступные поля")
	for f in flds :
		if not f.startswith("__") :
			try :
				print("{:15} : {}".format(f, getattr(v, f)))
			except Exception as ex:
				pass
				
def get_sprinklers_types() :
	fc = FilteredElementCollector(doc).OfCategory(bic.OST_Sprinklers).WhereElementIsElementType().ToElements()
	res =  {Element.Name.GetValue(e) : e for e in fc}
	for k in res :
		print("{} : {}".format(k , res[k]))
	return res
	
import dm_connect_2 as dm
import dm_nearest_geometry as dm1
reload(dm)	
reload(dm1)

short_name = "В21с-1"

pss = FilteredElementCollector(doc).OfCategory(bic.OST_PipingSystem).ToElements()

pss = filter(lambda x : dm.en(x).startswith(short_name), pss)

with trans(doc) :
	for n, ps in enumerate(pss) :
		print(ps.LookupParameter("Имя системы").AsString())
		ps.LookupParameter("Имя системы").Set("{} {}".format(short_name, n+1000))
		
	for n, ps in enumerate(pss) :
		print(ps.LookupParameter("Имя системы").AsString())
		ps.LookupParameter("Имя системы").Set("{} {}".format(short_name, n+1))
		
	

