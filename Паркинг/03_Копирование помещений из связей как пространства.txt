"""
***************************************************************
*** Копирование помещений из вставленной модели в виде
*** 
***************************************************************
* 
***************************************************************
"""
dut = 0.0032808398950131233

view_name = 'DM_ОТМЕТКИ'
margin_rel = False
margin = 200 * dut



from Autodesk.Revit import *
from Autodesk.Revit.DB import *
from contextlib import contextmanager
import math, sys
import clr
import System

clr.AddReferenceToFileAndPath(r"C:\Users\Дмитрий\NetTopologySuite.2.4.0\lib\netstandard2.0\NetTopologySuite.dll")
clr.AddReferenceToFileAndPath(r"C:\Program Files\Autodesk\Revit 2021\RevitAPIIFC.dll")
import NetTopologySuite as nts
import NetTopologySuite.Geometries as nts_geom
from Autodesk.Revit.DB import IFC as ifc

lib_path = r"D:\18_проектирование\98_PythonShell"
if not lib_path in sys.path :
	sys.path.append(lib_path)
	
print(0)
	
import dm_connect_2 as dm
print(0)
import dm_nearest_geometry as dm1
print(0)
#import dm_connect_3 as dm3
print(0)

reload(dm)	
reload(dm1)
#reload(dm3)

pi2 = math.pi * 2

dut = 0.0032808398950131233
	
bic = BuiltInCategory
bip = DB.Structure.StructuralType
nonstr = bip.NonStructural
OT = UI.Selection.ObjectType

uidoc = __revit__.ActiveUIDocument
doc = uidoc.Document
av = uidoc.ActiveView


mapp = dm.dmApp(doc)


rooms = []
levels = set()

for lf in mapp.linked_files :
	print(lf)
	print(lf.Name)
	if not lf : continue


		
	
	ttrans = lf.GetTotalTransform()
	ldoc = lf.GetLinkDocument()
	if not ldoc : continue
	print(ldoc)
	rf = RoomFilter()

	fc = FilteredElementCollector(ldoc).WherePasses(rf).ToElements()

	if len(fc) == 0 : continue
	
	for room in fc :
		try :
			if not room.Level.Name == av.GenLevel.Name : continue
			print(room)
			lp = room.Location.Point
			lpt = ttrans.OfPoint(lp)
			print(lp)
			print(lpt)
			print(room.Level.Name)
			levels.add(room.Level.Name)
			rooms.append((lpt, lf, room))
		except Exception as ex:
			
			pass
print(50*'-')		
for l in levels :
	print(l)

print(50*"-")
print("ок")



spaces = FilteredElementCollector(doc).OfCategory(bic.OST_MEPSpaces).ToElements()


level = uidoc.ActiveView.GenLevel
tr = Transaction(doc)
tr.Start("make space")

for room in rooms :
	trans = room[1].GetTotalTransform()
	p1 = trans.OfPoint(room[2].Location.Point)
	rname = room[2].LookupParameter("Имя").AsString()
	rnum = room[2].LookupParameter("Номер").AsString()
	found = False
	for sp in spaces :
		if sp.IsPointInSpace(p1) :
			print("Помещение попадает в существующее {}".format(rname))
			found = True
	if not found :
		print("Нужно создать новое помещение {}".format(rname))
	
		uv1 = UV(p1.X, p1.Y)
		newsp = doc.Create.NewSpace(level, uv1)
		newsp.LookupParameter("Имя").Set(rname)
		newsp.LookupParameter("Номер").Set(rnum)

tr.Commit()



	

	
	
