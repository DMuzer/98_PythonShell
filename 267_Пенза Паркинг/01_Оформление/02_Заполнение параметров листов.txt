# Заполнение параметров листов
import clr
from Autodesk.Revit import DB, UI
import System, sys
from imp import reload
import time
import json
dut = 0.0032808398950131233
bic = BuiltInCategory

refLocations = []
for assembly in clr.References :
	refLocations.append(assembly.Location)

libFolder = r"D:\18_проектирование\98_PythonShell"
if libFolder not in sys.path :
	sys.path.append(libFolder)
	
	
libFolder2 = r"D:\18_проектирование\pyRevitExtension\DMuzer.extension\lib"
if libFolder2 not in sys.path :
	sys.path.append(libFolder2)
	
try :
	reload(dm)
	print("Перезагрузка dmRevitClasses ok")
except Exception as ex :
	print(ex)
	import dmRevitClasses as dm
	print("импорт dmRevitClasses ok")
	
try :
	reload(dmDoc)
	print("Перезагрузка dmRevitDoc ok")
except Exception as ex :
	print(ex)
	import dmRevitDoc as dmDoc
	print("импорт dmRevitDoc ok")
	
class dmTitle(dm.dmElement) :
	pass
	def __repr__(self) :
		return "\nсемейство, Формат листа:{}".format( self.e.Name)
class dmSheet(dm.dmElement) :
	def _getTittles(self) :
		tittles = [dmTitle(e) for e in \
			FilteredElementCollector(doc, self.Id)\
			.OfCategory(bic.OST_TitleBlocks)\
			.WhereElementIsNotElementType()\
			.ToElements()]
		tittles = sorted(tittles, key = lambda x : x.Location.Point.X)
		return tittles
	tittles = property(_getTittles)
	def __repr__(self) :
		return "Лист {} - {} - {}"\
			.format(self.Value("Номер листа"), 
						self.Value("Имя листа"), self.Value("Раздел проекта"))
	
	def setNames(self) :
		with dm.trans(a = "Установка значений штампа") :
			self.Set("Строка 1 должность", "Разработал")
			self.Set("Строка 2 должность", "Проверил")
			self.Set("Строка 3 должность", "")
			self.Set("Строка 4 должность", "ГИП")
			self.Set("Строка 5 должность", "Н.Контр")
			self.Set("Строка 6 должность", "")
			
			self.Set("Строка 1 фамилия", "Сошников")
			self.Set("Строка 2 фамилия", "Чернов")
			self.Set("Строка 3 фамилия", "")
			self.Set("Строка 4 фамилия", "Видгорчик")
			self.Set("Строка 5 фамилия", "Крючков")
			self.Set("Строка 6 фамилия", "")
	
	def setDates(self) :
		sheetDate = "08.24"
		with dm.trans(a = "Установка значений штампа") :
			self.Set("Дата утверждения листа", "08.24")
			self.Set("Дата 1", sheetDate) 
			self.Set("Дата 2", sheetDate)
			self.Set("Дата 3", "")
			self.Set("Дата 4", sheetDate)
			self.Set("Дата 5", sheetDate)
			self.Set("Дата 6", "")
		
			for t in self.tittles :
				t.Set("Строка1_Дата",1)
				t.Set("Строка1_Дата",1)
				t.Set("Строка2_Дата",1)
				t.Set("Строка3_Дата",0)
				t.Set("Строка4_Дата",1)
				t.Set("Строка5_Дата",1)
				t.Set("Строка6_Дата",1)
				
	def setNumber(self) :
		number = self.Value("Номер листа").split("-")[-1]
		
		with dm.trans(a="Номер листа") :
			self.Set("Стадия проектирования", "Р")
			print(self.Value("Номер Страницы"), number)
			self.Set("Номер Cтраницы", number)
			tittles = self.tittles 
			if len(tittles) == 1 :
				
				tittles[0].Set("Номер листа (вручную)", number)
			elif len(tittles) > 1 :
				for num, t in enumerate(tittles, 1) :
					print(str(num))
					t.Set("Номер листа N2", str(num))
					
		
		
		
		
	pass
	
parts = [
"АУПТ.1",

]	
sheets = [dmSheet(e) for e in FilteredElementCollector(doc).OfClass(ViewSheet).ToElements()]

sheets = [s for s in sheets if s.Value("Раздел проекта") in parts]

with dm.trans(a = "установка листов") :
	for s in sheets :
		print(s)
		pass
		s.setDates()
		s.setNames()
		s.setNumber()
		
		



	


	
