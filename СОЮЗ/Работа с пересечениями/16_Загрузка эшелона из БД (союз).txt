# Загрузка эшелонов из БД
import clr
from Autodesk.Revit import DB, UI
import System, sys
from imp import reload
import time
import json
dut = 0.0032808398950131233
refLocations = []
for assembly in clr.References :
	refLocations.append(assembly.Location)
bufsPath = r"C:\Users\Дмитрий\System.Buffers.4.4.0\lib\netstandard2.0\System.Buffers.dll"
if not bufsPath in refLocations :
	clr.AddReferenceToFileAndPath(bufsPath)
ntsPath = r"C:\Users\Дмитрий\nettopologysuite.2.5.0\lib\netstandard2.0\NetTopologySuite.dll"
if not ntsPath in refLocations :
	clr.AddReferenceToFileAndPath(ntsPath)
	
import NetTopologySuite as nts
#from NetTopologySuite.Geometries import *
import NetTopologySuite.Geometries as geoms

libFolder = r"D:\18_проектирование\98_PythonShell"
if libFolder not in sys.path :
	sys.path.append(libFolder)
	
try :
	reload(dm)
	print("Перезагрузка dmFindRoute2 ok")
except Exception as ex :
	print(ex)
	import dmFindRoute2 as dm
	print("импорт dmFindRoute2 ok")
	#raise
	
libFolder2 = r"D:\18_проектирование\pyRevitExtension\DMuzer.extension\lib"
if libFolder2 not in sys.path :
	sys.path.append(libFolder2)
	
try :
	reload(dm2)
	print("Перезагрузка dmRevitClasses ok")
except Exception as ex :
	print(ex)
	import dmRevitClasses as dm2
	print("импорт dmRevitClasses ok")
	
try :
	reload(dm3)
	print("Перезагрузка dm_connect_2 ok")
except Exception as ex :
	print(ex)
	import dm_connect_2 as dm3
	print("импорт dm_connect_2 ok")
	#raise
	

typeId = ElementId(6036810)
views = {v.Name : v  for v in FilteredElementCollector(doc).OfClass(View).ToElements()}
#workPlan = views["Р_ВПВ_Транзиты Этаж -2 E1-E2-E3 3200-3380"]
workPlan = views["В_Этаж 01_Водопровод_Противопожарный"]
#workPlan = uidoc.ActiveView
targetView = views["План1"]
viewRange 			= workPlan.GetViewRange()

def getViewBB(view, startElevation, ) :
	bb = workPlan.get_BoundingBox(None)
	
	bottomElevation 	= doc.GetElement(viewRange.GetLevelId(PlanViewPlane.BottomClipPlane)).Elevation\
								+ viewRange.GetOffset(PlanViewPlane.BottomClipPlane)
	topElevation 		= doc.GetElement(viewRange.GetLevelId(PlanViewPlane.TopClipPlane)).Elevation\
								+ viewRange.GetOffset(PlanViewPlane.TopClipPlane)
	
	bbMin, bbMax = bb.Transform.OfPoint(bb.Min), bb.Transform.OfPoint(bb.Max)
	minPnt = XYZ(bbMin.X, bbMin.Y, bottomElevation)	
	maxPnt = XYZ(bbMax.X, bbMax.Y, topElevation)

	viewSolid 			= dm.minMaxToSolid(minPnt, maxPnt)
	viewBB 				= BoundingBoxXYZ() 
	viewBB.Min 			= bbMin
	viewBB.Max			= bbMax

dmDoc 				= dm.dmDocument(doc)

tt1		= time.time()

solids 		= []
elements 	= []

	
opt = Options()

eshelons = {}
eDicts = {}
viewRange 			= workPlan.GetViewRange()
bottomElevation 	= workPlan.GenLevel.Elevation 
centerElevation = bottomElevation + 2650 * dut
height = 180 * dut	

plan = dm.dmPlan(workPlan)

plan.loadAllEshelons()
#plan.eshelons[2975].showFreePolygon(150*dut)
#plan.showAllFreeEshelons(150*dut)
pipe = dm2.dmElement(1041409)
solver = dm.dmPipeSolver(pipe, plan)
chl=solver.checkLocation()
print("Прямой проход: {}".format(solver.checkLocation()))
segment = solver.solvePipe()



#ds = dm.create_ds_safe(pg, doc)

#ds.Location.Move(XYZ(0,0, centerElevation))

#ds2 = eshelon.showEshelonSolid()

	
	
		


tt2 = time.time()
print("Время выполнения {}".format(tt2-tt1))
#raise





	