# Построение эшелонов и запись в БД
import clr
from Autodesk.Revit import DB, UI
import System, sys
from imp import reload
import time
import json
dut = 0.0032808398950131233
refLocations = []
for assembly in clr.References :
	refLocations.append(assembly.Location)
bufsPath = r"C:\Users\Дмитрий\System.Buffers.4.4.0\lib\netstandard2.0\System.Buffers.dll"
if not bufsPath in refLocations :
	clr.AddReference(bufsPath)
ntsPath = r"C:\Users\Дмитрий\nettopologysuite.2.5.0\lib\netstandard2.0\NetTopologySuite.dll"
if not ntsPath in refLocations :
	clr.AddReference(ntsPath)
	
import NetTopologySuite as nts
#from NetTopologySuite.Geometries import *
import NetTopologySuite.Geometries as geoms

libFolder = r"D:\18_проектирование\98_PythonShell"
if libFolder not in sys.path :
	sys.path.append(libFolder)
		
try :
	reload(dm)
	print("Перезагрузка dmFindRoute2 ok")
except Exception as ex :
	print(ex)
	import dmFindRoute2 as dm
	print("импорт dmFindRoute2 ok")
	#raise
	
libFolder2 = r"D:\18_проектирование\pyRevitExtension\DMuzer.extension\lib"
if libFolder2 not in sys.path :
	sys.path.append(libFolder2)
	
try :
	reload(dm2)
	print("Перезагрузка dmRevitClasses ok")
except Exception as ex :
	print(ex)
	import dmRevitClasses as dm2
	print("импорт dmRevitClasses ok")
	
try :
	reload(dm3)
	print("Перезагрузка dm_connect_2 ok")
except Exception as ex :
	print(ex)
	import dm_connect_2 as dm3
	print("импорт dm_connect_2 ok")
	#raise
	
	



views = {v.Name : v  for v in FilteredElementCollector(doc).OfClass(View).ToElements()}
#workPlan = views["Р_ВПВ_Транзиты Этаж -2 E1-E2-E3 3200-3380"]
#workPlan = views["В_Этаж 01_Водопровод_Противопожарный"]
workPlan = uidoc.ActiveView
workPlan = views["План увязка -1.900"]
#targetView = views["План1"]
viewRange 			= workPlan.GetViewRange()

dmDoc 				= dm.dmDocument(doc)

tt1		= time.time()

solids 		= []
elements 	= []

height = 80
plan = dm.dmPlan(workPlan)



#eshelon = plan.loadEshelonByElevation(2750)

#for eshelon in plan.eshelons.values() :
#	eshelon.writeToDb()
#	pass

plan.clearEshelons()
plan.createIfAbsent(2700, 4800, height, createDs= True)
plan.loadAllEshelons()

#for eshelon in plan.eshelons.values() :
#	eshelon.writeToDb()
#	pass

#plan.createEshelons(2700, 2750, height)

try :
	pass
	#plan.showAllFreeEshelons(100*dut)
except :
	print("Ошибка")
	

tt2 = time.time()
print("Время выполнения {}".format(tt2-tt1))


	