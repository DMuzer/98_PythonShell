import re

def get_family(name) :
	fc = FilteredElementCollector(doc).WhereElementIsElementType().ToElements()
	
	for e in fc :
		if re.match(name, Element.Name.GetValue(e), re.I) :
			return e
			
class LoadOpts(IFamilyLoadOptions) :
	def OnFamilyFound(self, familyInUse, overwriterParamterValues) :
		overwriterParamterValues = True
		print("OnFamilyFound")
		return True
		
	def OnSharedFamilyFound(self, sharedFamily, familyInUse, source, overwriteParameterValues) :
		source = Familysource.Family
		overwriteParameterValues = True
		print("OnFamilyFound")
		return True
				
def get_parameter(fm, name) :
	for p in fm.Parameters :
		if re.match(name, p.Definition.Name, re.I) :
			return p
sensor_type = get_family(".*ОПОП 124-R3.*", )

family_doc = doc.EditFamily(sensor_type.Family)
family_manager = family_doc.FamilyManager

quantity_param = get_parameter(family_manager, "ADSK_Количество")
family_type = family_manager.CurrentType

for p in family_manager.Parameters :
	if p.StorageType == StorageType.Double :
		print("{:15} : {}".format(p.Definition.Name, family_type.AsDouble(p)))
	if p.StorageType == StorageType.String :
		print("{:15} : {}".format(p.Definition.Name, family_type.AsString(p)))
		


print(family_manager.CurrentType.Name)

def get_shared_parameter_definition(name) :
	fc = FilteredElementCollector(doc).OfClass(SharedParameterElement).ToElements()	
	for e in fc :
		definition = e.GetDefinition()
		if definition.Name == name :
			return definition
			
quantity_definition = get_shared_parameter_definition("ADSK_Количество")
print(quantity_definition.Name)
		


trans = Transaction(family_doc)
trans.Start("Добавление параметра")
try :

	quantily_param = family_manager.AddParameter(quantity_definition, BuiltInParameterGroup.PG_IDENTITY_DATA, True)
	family_manager.SetFormula(quantity_param, "1")
	
	trans.Commit()
	
	loadOpts = LoadOpts()

	family= family_doc.LoadFamily(doc, loadOpts)
	
except :
	trans.RollBack()
